syntax = "proto3";

package edu.cheap_course;

option go_package = "pkg/api/v1;edu.cheap_course";

import "google/protobuf/timestamp.proto";

enum Role {
    ADMIN = 0;
    TEACHER = 1;
    STUDENT = 3;
}
enum MutationType {
    CREATE = 0;
    UPDATE = 1;
    DELETE = 2;
}
message User {
    string id = 1;
    string name = 2;
    string email = 3;
    Role role = 4;
    google.protobuf.Timestamp created_at = 5;
}

message Course {
    string id = 1;
    string teacher_id = 2;
    string title = 3;
    string description = 4;
    float price = 5;
    google.protobuf.Timestamp created_at = 6;
    google.protobuf.Timestamp updated_at = 7;
    repeated CourseCategory course_categories = 8;
    repeated Chapter chapters = 9;
}

message CourseCategory {
    string id = 1;
    string name = 2;
    string description = 3;
}

message Chapter {
    string id = 1;
    string course_id = 2;
    string title = 3;
    int32 order_index = 4;
    repeated Lesson lessons = 5;
}

message Lesson {
    string id = 1;
    string course_id = 2;
    string chapter_id = 3;
    string title = 4;
    repeated Content contents = 5;
    int32 order_index = 6;
}
message Content {
    string id = 1;
    string content = 3;
    google.protobuf.Timestamp created_at = 4;
    google.protobuf.Timestamp updated_at = 5;
}
message ContentMutation {
    MutationType mutation_type = 1;
    optional string id = 2;
    optional string content = 3;
}
message UserRequest {
    MutationType mutation_type = 1;
    optional string id = 2;
    optional string name = 3;
    optional string email = 4;
    optional Role role = 5;
    optional string password_hash = 6;
}
message CourseRequest {
    MutationType mutation_type = 1;
    optional string id = 2;
    optional string teacher_id = 3;
    optional string title = 4;
    optional string description = 5;
    optional float price = 6;
    repeated CourseCategory course_categories = 7;
    repeated ChapterRequest chapters = 8;
    bool has_course_category = 9;
}

message ChapterRequest {
    MutationType mutation_type = 1;
    optional string id = 2;
    optional string course_id = 3;
    optional string title = 4;
    optional int32 order_index = 5;
    repeated LessonRequest lessons = 6;
}

message LessonRequest {
    MutationType mutation_type = 1;
    optional string id = 2;
    optional string course_id = 3;
    optional string chapter_id = 4;
    optional string title = 5;
    optional string content = 6;
    optional int32 order_index = 7;
    repeated ContentMutation contents = 8;
}

message MutationResponse {
    bool success = 1;
    string id = 2;
}
message CategoryRequest {
    MutationType mutation_type = 1;
    optional string id = 2;
    optional string name = 3;
    optional string description = 4;
}
message GetUserRequest {
    repeated string ids = 1;
    optional string email = 2;
    optional string name = 3;
    optional Role role = 4;
}
message GetCourseRequest {
    repeated string ids = 1;
    optional string title = 2;


}
message GetUserResponse {
    repeated User users = 1;
}

service CourseService {
    // User
    rpc MutationUser(UserRequest) returns (MutationResponse) {}
    rpc GetUsers(GetUserRequest) returns (GetUserResponse) {}
    rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {}
    // Course
    rpc MutationCourse(CourseRequest) returns (MutationResponse) {}
    rpc GetCourses(GetCourseRequest) returns (GetCourseResponse) {}
    rpc ListCourses(ListCoursesRequest) returns (ListCoursesResponse) {}
    // CourseCategory
    // rpc GetCourseCategories(GetCourseCategoryRequest) returns (GetCourseCategoryResponse) {}
    rpc MutationCourseCategory(CategoryRequest) returns (MutationResponse) {}
    rpc ListCourseCategories(ListCourseCategoriesRequest) returns (ListCourseCategoriesResponse) {}
    // Chapter
    // rpc GetChapters(GetChapterRequest) returns (GetChapterResponse) {}
    // rpc MutationChapter(ChapterRequest) returns (MutationResponse) {}
    // rpc ListChapters(ListChaptersRequest) returns (ListChaptersResponse) {}
    // /// Lesson
    // rpc GetLessons(GetLessonRequest) returns (GetLessonResponse) {}
    // rpc MutationLesson(LessonRequest) returns (MutationResponse) {}
    // rpc ListLessons(ListLessonsRequest) returns (ListLessonsResponse) {}
}